name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Runs when pushing to main branch
  pull_request:
    branches:
      - main # Runs when a PR is created

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      #   - name: Run Linter
      #     run: npm run lint

      - name: Run Tests
        run: npm test

      - name: Build the application
        run: npm run build

  docker-build-and-push:
    needs: build-and-test # Run this job only after the build-and-test job succeeds
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/my-app:latest .

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/my-app:latest

  deploy:
    needs: docker-build-and-push # Run this job only after the docker-build-and-push job succeeds
    runs-on: ubuntu-latest

    # steps:
    #   - name: Deploy to Server via SSH # Deploy the application (example using SSH)
    #     uses: appleboy/ssh-action@v0.1.10
    #     with:
    #       host: ${{ secrets.SSH_HOST }}
    #       username: ${{ secrets.SSH_USER }}
    #       key: ${{ secrets.SSH_PRIVATE_KEY }}
    #       script: |
    #         docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/my-app:latest
    #         docker stop my-app || true
    #         docker rm my-app || true
    #         docker run -d --name my-app -p 3000:3000 --env-file .env ${{ secrets.DOCKER_HUB_USERNAME }}/my-app:latest
